#BlueJ class context
comment0.params=
comment0.target=Machine()
comment0.text=\n\ Create\ a\ machine\ with\ default\ name\ and\ size.\n
comment1.params=name\ rightEdge\ bottomEdge
comment1.target=Machine(java.lang.String,\ int,\ int)
comment1.text=\n\ \ Create\ a\ machine\ with\ given\ name\ and\ size.\n\ \ \n\ \ @param\ name\ The\ name\ to\ give\ the\ machine.\n\ \ @param\ rightEdge\ The\ maximum\ x\ coordinate.\n\ \ @param\ bottomEdge\ The\ maximum\ y\ coordinate.\n
comment10.params=
comment10.target=int\ getRightWall()
comment10.text=\n\ Return\ the\ edge\ of\ the\ right-hand\ wall.\n
comment11.params=
comment11.target=int\ getTopWall()
comment11.text=\n\ Return\ the\ edge\ of\ the\ top\ wall.\n
comment12.params=
comment12.target=int\ getBottomWall()
comment12.text=\n\ Return\ the\ edge\ of\ the\ bottom\ wall.\n
comment13.params=
comment13.target=int\ getlengthToGap()
comment14.params=
comment14.target=void\ pauseMachine()
comment14.text=\n\ Introduces\ a\ small\ delay\ in\ ball\ movement,\ for\ smooth\ running,\ and\ refreshes\ the\ machine\ borders\n\ at\ each\ delay.\n
comment15.params=
comment15.target=void\ resetMachine()
comment15.text=\n\ Resets\ the\ machine\ back\ to\ initial\ view,\ with\ no\ ball\ objects.\n
comment16.params=
comment16.target=boolean\ getIsSimulationRunning()
comment16.text=\n\ Returns\ whether\ the\ simulation\ is\ still\ running\ or\ not.\n
comment17.params=
comment17.target=void\ stopSimulation()
comment17.text=\n\ Ends\ the\ simulation\ and\ calls\ the\ score\ to\ be\ displayed.\n
comment18.params=
comment18.target=void\ displayScore()
comment18.text=\n\ displays\ the\ total\ score\ of\ the\ simulation\ when\ it\ ends.\n
comment2.params=ballObj
comment2.target=void\ addObj(BallObject)
comment2.text=\n\ Adds\ object\ to\ the\ list\ of\ objects\ in\ the\ machine.\n\ \n\ @param\ BallObj\ \ the\ object\ to\ add\ to\ the\ list.\n
comment3.params=currentPinball
comment3.target=void\ objectCollisionCheck(PinballObject)
comment3.text=\n\ Check\ if\ a\ pinball\ collides\ with\ object.\n\ \n\ @param\ currentPinball\ \ The\ current\ object\ to\ check.\n
comment4.params=xPos1\ xPos2\ yPos1\ yPos2
comment4.target=float\ Pythagoras(int,\ int,\ int,\ int)
comment4.text=\n\ \ Calculate\ and\ return\ the\ overall\ distance\ between\ two\ objects.\n\ \ \n\ \ @param\ xPos1\ \ The\ x\ coordinate\ of\ the\ current\ object.\n\ \ @param\ xPos2\ \ The\ x\ coordinate\ of\ the\ other\ object.\n\ \ @param\ yPos1\ \ The\ y\ coordinate\ of\ the\ current\ object.\n\ \ @param\ yPos2\ \ The\ y\ coordinate\ of\ the\ other\ object.\n
comment5.params=ballObj
comment5.target=void\ erase(BallObject)
comment5.text=\n\ Erase\ a\ BallObject\ from\ the\ view\ of\ the\ pinball\ machine.\ If\ its\ a\ pinball,\ erase\ the\ score\ as\ well.\n\ \n\ @param\ ballObj\ The\ ball\ object\ to\ be\ erased.\n
comment6.params=ballObj
comment6.target=void\ draw(BallObject)
comment6.text=\n\ Draw\ a\ BallObject\ at\ its\ current\ position\ onto\ the\ view\ of\ the\ pinball\ machine.\n\ \n\ @param\ ballObj\ The\ object\ to\ be\ drawn.\n
comment7.params=
comment7.target=void\ drawMachine()
comment7.text=\n\ Draw\ the\ edge\ of\ the\ pinball\ machine\ .\n
comment8.params=
comment8.target=void\ eraseMachine()
comment8.text=\n\ erase\ the\ edge\ of\ the\ pinball\ machine\ .\n
comment9.params=
comment9.target=int\ getLeftWall()
comment9.text=\n\ Return\ the\ edge\ of\ the\ left-hand\ wall.\n
numComments=19
